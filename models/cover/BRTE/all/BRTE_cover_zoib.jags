# Level 1 ANOVA for zero-inflated beta BRTE model
model{
  
  for(i in 1:N){ # loop through all observations
    #likelihood for psi, mixture parameter, indicating propotion of discrete observations
    y.discrete[i] ~ dbern(psi)
    # replicated data
    y.discrete.rep[i] ~ dbern(psi)
  }
  

  for(i in 1:n.discrete){ # loop through discrete observations
    # likelihood for gamma, probability of presence
    y.d[i] ~ dbern(mu[i])
    # replicated data
    y.d.rep[i] ~ dbern(mu[i])
    
    # mean ANOVA model 
    logit(mu[i]) <- alpha + beta[1]*fall[i] + beta[2]*spring[i] +
    beta[3]*herbicide[i] + 
    beta[4]*greenstrip[i] + beta[5]*fall_herbicide[i] + beta[6]*spring_herbicide[i] + 
    beta[7]*fall_greenstrip[i] + beta[8]*spring_greenstrip[i] +
    eps[block.d[i]]
  }
   
  
  for(i in 1:n.cont){ # loop through continuous (0,1) observations
  # likelihood for mu, tau (beta parameters)
    y.c[i] ~ dbeta(p[i], q[i])
    # replicated data
    y.c.rep[i] ~ dbeta(p[i], q[i])
    
    # reparameterization to mean and precision
    p[i] <- mu2[i] * tau
    q[i] <- (1 - mu2[i]) * tau
    
    # mean ANOVA model 
    logit(mu2[i]) <- alpha + beta[1]*fall2[i] + beta[2]*spring2[i] +
    beta[3]*herbicide2[i] + 
    beta[4]*greenstrip2[i] + beta[5]*fall_herbicide2[i] + beta[6]*spring_herbicide2[i] + 
    beta[7]*fall_greenstrip2[i] + beta[8]*spring_greenstrip2[i] +
    eps[block.c[i]]
  } 
    
  # Identifiable intercept, post sweeping random effect means into intercept
  alpha.star <- alpha + mean(eps[])
  
  # Relatively non-informative priors
  
  # random effects of block
  for(b in 1:Nb){ # number of blocks
    eps[b] ~ dnorm(0, tau.eps)
    
    # Identifiable random effects - post-sweeping of mean REs by block
    eps.star[b] <- eps[b] - mean(eps[])
  }
  
  # Block level precisions with folded T priors
  tau.eps ~ dt(0, 10, 2)T(0, )
  
  # Coefficient root notes
  alpha ~ dnorm(0, 0.0001)

  for(l in 1:nL){ # Number of treatment offsets
    beta[l] ~ dnorm(0, 0.0001)
  }
  
  # General priors
  psi ~ dunif(0, 1)
  tau ~ dt(0, 10, 2)T(0, )
  sig <- pow(tau, -0.5)
  sig.eps <- pow(tau.eps, -0.5)
  
  
  # Calculations to monitor, only two-way combinations
  int_Beta[1] <- beta[1] + beta[3] + beta[5] # fall:herbicide
  int_Beta[2] <- beta[2] + beta[3] + beta[6] # spring:herbicide
  int_Beta[3] <- beta[1] + beta[4] + beta[7] # fall:greenstrip
  int_Beta[4] <- beta[2] + beta[4] + beta[8] # spring:greenstrip
  
  # Calculations to monitor, only two-way combinations
  Diff_Beta[1] <- ilogit(alpha.star + beta[1]) - ilogit(alpha.star) # fall
  Diff_Beta[2] <- ilogit(alpha.star + beta[2]) - ilogit(alpha.star) # spring
  Diff_Beta[3] <- ilogit(alpha.star + beta[3]) - ilogit(alpha.star) # herbicide
  Diff_Beta[4] <- ilogit(alpha.star + beta[4]) - ilogit(alpha.star) # greenstrip

  diff_Beta[1] <- ilogit(alpha.star + beta[1] + beta[3] + beta[5]) - ilogit(alpha.star) # fall:herbicide
  diff_Beta[2] <- ilogit(alpha.star + beta[2] + beta[3] + beta[6]) - ilogit(alpha.star) # spring:herbicide
  diff_Beta[3] <- ilogit(alpha.star + beta[1] + beta[4] + beta[7]) - ilogit(alpha.star) # fall:greenstrip
  diff_Beta[4] <- ilogit(alpha.star + beta[2] + beta[4] + beta[8]) - ilogit(alpha.star) # spring:greenstrip
  
  # Monitor the mean of each group
  m.ungrazed.control <- ilogit(alpha.star)*(1-psi) 
  m.ungrazed.herbicide <- ilogit(alpha.star + beta[3])*(1-psi) 
  m.ungrazed.greenstrip <- ilogit(alpha.star + beta[4])*(1-psi) 
  
  m.fall.control <- ilogit(alpha.star + beta[1])*(1-psi)  
  m.fall.herbicide <- ilogit(alpha.star + beta[1] + beta[3] + beta[5])*(1-psi)  
  m.fall.greenstrip <- ilogit(alpha.star + beta[1] + beta[4] + beta[7])*(1-psi)  
    
  m.spring.control <- ilogit(alpha.star + beta[2])*(1-psi)   
  m.spring.herbicide <- ilogit(alpha.star + beta[2] + beta[3] + beta[6])*(1-psi)  
  m.spring.greenstrip <- ilogit(alpha.star + beta[2] + beta[4] + beta[8])*(1-psi)   
  
  
}