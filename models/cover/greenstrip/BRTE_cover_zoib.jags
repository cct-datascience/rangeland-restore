# Level 1 ANOVA for zero-inflated beta BRTE model
model{
  
  for(i in 1:N){ # loop through all observations
    #likelihood for psi, mixture parameter, indicating propotion of discrete observations
    y.discrete[i] ~ dbern(psi)
    # replicated data
    y.discrete.rep[i] ~ dbern(psi)
  }
  

  for(i in 1:n.discrete){ # loop through discrete observations
    # likelihood for gamma, probability of presence
    y.d[i] ~ dbern(mu[i])
    # replicated data
    y.d.rep[i] ~ dbern(mu[i])
    
    # mean ANOVA model 
    logit(mu[i]) <- alpha + beta[1]*mix[i] + beta[2]*high[i] + beta[3]*coated[i] + 
    beta[4]*fall[i] + beta[5]*spring[i] + beta[6]*mix_high[i] + beta[7]*mix_coated[i] +
    beta[8]*mix_fall[i] + beta[9]*mix_spring[i] + beta[10]*high_coated[i] + 
    beta[11]*high_fall[i] + beta[12]*high_spring[i] + beta[13]*coated_fall[i] +
    beta[14]*coated_spring[i] +
    eps[block.d[i]]
  }
   
  
  for(i in 1:n.cont){ # loop through continuous (0,1) observations
  # likelihood for mu, tau (beta parameters)
    y.c[i] ~ dbeta(p[i], q[i])
    # replicated data
    y.c.rep[i] ~ dbeta(p[i], q[i])
    
    # reparameterization to mean and precision
    p[i] <- mu2[i] * tau
    q[i] <- (1 - mu2[i]) * tau
    
    # mean ANOVA model 
    logit(mu2[i]) <- alpha + beta[1]*mix2[i] + beta[2]*high2[i] + beta[3]*coated2[i] + 
    beta[4]*fall2[i] + beta[5]*spring2[i] + beta[6]*mix_high2[i] + beta[7]*mix_coated2[i] +
    beta[8]*mix_fall2[i] + beta[9]*mix_spring2[i] + beta[10]*high_coated2[i] + 
    beta[11]*high_fall2[i] + beta[12]*high_spring2[i] + beta[13]*coated_fall2[i] +
    beta[14]*coated_spring2[i] +
    eps[block.c[i]]
  } 
    
  # Identifiable intercept, post sweeping random effect means into intercept
  alpha.star <- alpha + mean(eps[])
  
  # Relatively non-informative priors
  
  # random effects of block
  for(b in 1:Nb){ # number of blocks
    eps[b] ~ dnorm(0, tau.eps)
    
    # Identifiable random effects - post-sweeping of mean REs by block
    eps.star[b] <- eps[b] - mean(eps[])
  }
  
  # Block level precisions with folded T priors
  tau.eps ~ dt(0, 10, 2)T(0, )
  
  # Coefficient root notes
  alpha ~ dnorm(0, 0.0001)

  for(l in 1:nL){ # Number of treatment offsets
    beta[l] ~ dnorm(0, 0.0001)
  }
  
  # General priors
  psi ~ dunif(0, 1)
  tau ~ dt(0, 10, 2)T(0, )
  sig <- pow(tau, -0.5)
  sig.eps <- pow(tau.eps, -0.5)
  
  
  # Calculations to monitor, only two-way combinations
  int_Beta[1] <- beta[1] + beta[2] + beta[6] # mix:high
  int_Beta[2] <- beta[1] + beta[3] + beta[7] # mix:coated
  int_Beta[3] <- beta[1] + beta[4] + beta[8] # mix:fall
  int_Beta[4] <- beta[1] + beta[5] + beta[9] # mix:spring
  int_Beta[5] <- beta[2] + beta[3] + beta[10] # high:coated
  int_Beta[6] <- beta[2] + beta[4] + beta[11] # high:fall
  int_Beta[7] <- beta[2] + beta[5] + beta[12] # high:spring
  int_Beta[8] <- beta[3] + beta[4] + beta[13] # coated:fall
  int_Beta[9] <- beta[3] + beta[5] + beta[14] # coated:spring

  
  # Calculations to monitor, only two-way combinations
  Diff_Beta[1] <- ilogit(alpha.star + beta[1]) - ilogit(alpha.star) # mix
  Diff_Beta[2] <- ilogit(alpha.star + beta[2]) - ilogit(alpha.star) # high
  Diff_Beta[3] <- ilogit(alpha.star + beta[3]) - ilogit(alpha.star) # coated
  Diff_Beta[4] <- ilogit(alpha.star + beta[4]) - ilogit(alpha.star) # fall
  Diff_Beta[5] <- ilogit(alpha.star + beta[5]) - ilogit(alpha.star) # spring

diff_Beta[1] <- ilogit(alpha.star + beta[1] + beta[2] + beta[6]) - ilogit(alpha.star) # mix:high
diff_Beta[2] <- ilogit(alpha.star + beta[1] + beta[3] + beta[7]) - ilogit(alpha.star) # mix:coated
diff_Beta[3] <- ilogit(alpha.star + beta[1] + beta[4] + beta[8]) - ilogit(alpha.star) # mix:fall
diff_Beta[4] <- ilogit(alpha.star + beta[1] + beta[5] + beta[9]) - ilogit(alpha.star) # mix:spring
diff_Beta[5] <- ilogit(alpha.star + beta[2] + beta[3] + beta[10]) - ilogit(alpha.star) # high:coated
diff_Beta[6] <- ilogit(alpha.star + beta[2] + beta[4] + beta[11]) - ilogit(alpha.star) # high:fall
diff_Beta[7] <- ilogit(alpha.star + beta[2] + beta[5] + beta[12]) - ilogit(alpha.star) # high:spring
diff_Beta[8] <- ilogit(alpha.star + beta[3] + beta[4] + beta[13]) - ilogit(alpha.star) # coated:fall
diff_Beta[9] <- ilogit(alpha.star + beta[3] + beta[5] + beta[14]) - ilogit(alpha.star) # coated:spring  
  
  # Monitor the mean of each group
  m.mono.low.uncoated.ungrazed <- ilogit(alpha.star) 
  m.mono.low.uncoated.fall <- ilogit(alpha.star + beta[4]) 
  m.mono.low.uncoated.spring <- ilogit(alpha.star + beta[5]) 
  
  m.mono.low.coated.ungrazed <- ilogit(alpha.star + beta[3]) 
  m.mono.low.coated.fall <- ilogit(alpha.star + beta[3] + beta[4] + beta[13]) 
  m.mono.low.coated.spring <- ilogit(alpha.star + beta[3] + beta[5] + beta[14]) 
  
  m.mono.high.uncoated.ungrazed <- ilogit(alpha.star + beta[2]) 
  m.mono.high.uncoated.fall <- ilogit(alpha.star + beta[4] + beta[2] + beta[11]) 
  m.mono.high.uncoated.spring <- ilogit(alpha.star + beta[5] + beta[2] + beta[12]) 
  
  m.mono.high.coated.ungrazed <- ilogit(alpha.star + beta[3] + beta[2] + beta[10]) 
  m.mono.high.coated.fall <- ilogit(alpha.star + beta[3] + beta[4] + beta[13] + beta[2] + beta[11] + beta[10]) 
  m.mono.high.coated.spring <- ilogit(alpha.star + beta[3] + beta[5] + beta[14] + beta[2] + beta[12] + beta[10])
  
  m.mix.low.uncoated.ungrazed <- ilogit(alpha.star + beta[1]) 
  m.mix.low.uncoated.fall <- ilogit(alpha.star + beta[4] + beta[1] + beta[8]) 
  m.mix.low.uncoated.spring <- ilogit(alpha.star + beta[5] + beta[1] + beta[9]) 
  
  m.mix.low.coated.ungrazed <- ilogit(alpha.star + beta[3] + beta[1] + beta[7]) 
  m.mix.low.coated.fall <- ilogit(alpha.star + beta[3] + beta[4] + beta[13] + beta[1] + beta[8] + beta[7]) 
  m.mix.low.coated.spring <- ilogit(alpha.star + beta[3] + beta[5] + beta[14] + beta[1] + beta[9] + beta[7]) 
  
  m.mix.high.uncoated.ungrazed <- ilogit(alpha.star + beta[2] + beta[1] + beta[6]) 
  m.mix.high.uncoated.fall <- ilogit(alpha.star + beta[4] + beta[2] + beta[11] + beta[1] + beta[6] + beta[8]) 
  m.mix.high.uncoated.spring <- ilogit(alpha.star + beta[5] + beta[2] + beta[12] + beta[1] + beta[6] + beta[9]) 
  
  m.mix.high.coated.ungrazed <- ilogit(alpha.star + beta[3] + beta[2] + beta[10] + beta[1] + beta[6] + beta[7]) 
  m.mix.high.coated.fall <- ilogit(alpha.star + beta[3] + beta[4] + beta[13] + beta[2] + beta[11] + beta[10] + beta[1] + beta[6] + beta[7] + beta [8]) 
  m.mix.high.coated.spring <- ilogit(alpha.star + beta[3] + beta[5] + beta[14] + beta[2] + beta[12] + beta[10] + beta[1] + beta[6] + beta[7] + beta[9])
  
}