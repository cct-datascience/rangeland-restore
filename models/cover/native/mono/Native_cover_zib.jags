# two-way ANOVA for zero-inflated beta cover model
model{
  
  for(i in 1:N){ # loop through all observations
    #likelihood for rho, mixture parameter, indicating proportion of zero observations
    y.0[i] ~ dbern(rho[i])
    # replicated data
    y.0.rep[i] ~ dbern(rho[i])
    
    # linear model of absence
    logit(rho[i]) <- a + b[1]*POSE[i] + b[2]*POFE[i] + b[3]*VUMI[i] +
    b[4]*ELEL[i] + b[5]*high[i] + b[6]*fall[i] + b[7]*spring[i] +
    b[8]*coated[i] +
    b[9]*POSE[i]*high[i] + b[10]*POFE[i]*high[i] + b[11]*VUMI[i]*high[i]+ b[12]*ELEL[i]*high[i] +
    b[13]*POSE[i]*fall[i] + b[14]*POFE[i]*fall[i] + b[15]*VUMI[i]*fall[i] + b[16]*ELEL[i]*fall[i] + 
    b[17]*POSE[i]*spring[i] + b[18]*POFE[i]*spring[i] + b[19]*VUMI[i]*spring[i] + b[20]*ELEL[i]*spring[i] + 
    b[21]*POSE[i]*coated[i] + b[22]*POFE[i]*coated[i] + b[23]*VUMI[i]*coated[i] + b[24]*ELEL[i]*coated[i] + 
    b[25]*high[i]*fall[i] + b[26]*high[i]*spring[i] + b[27]*high[i]*coated[i] + 
    b[28]*fall[i]*coated[i] + b[29]*spring[i]*coated[i] +
    eps[block[i]]
  }
  

  for(i in 1:n.cont){ # loop through continuous (0,1) observations
  # likelihood for mu, tau (beta parameters)
    y.c[i] ~ dbeta(p[i], q[i])
    # replicated data
    y.c.rep[i] ~ dbeta(p[i], q[i])
    
    # reparameterization to mean and precision
    p[i] <- mu[i] * tau
    q[i] <- (1 - mu[i]) * tau
    
    # linear model of cover if present
    logit(mu[i]) <- alpha + beta[1]*POSE2[i] + beta[2]*POFE2[i] + beta[3]*VUMI2[i] +
    beta[4]*ELEL2[i] + beta[5]*high2[i] + beta[6]*fall2[i] + beta[7]*spring2[i] +
    beta[8]*coated2[i] +
    beta[9]*POSE2[i]*high2[i] + beta[10]*POFE2[i]*high2[i] + beta[11]*VUMI2[i]*high2[i]+ beta[12]*ELEL2[i]*high2[i] +
    beta[13]*POSE2[i]*fall2[i] + beta[14]*POFE2[i]*fall2[i] + beta[15]*VUMI2[i]*fall2[i] + beta[16]*ELEL2[i]*fall2[i] + 
    beta[17]*POSE2[i]*spring2[i] + beta[18]*POFE2[i]*spring2[i] + beta[19]*VUMI2[i]*spring2[i] + beta[20]*ELEL2[i]*spring2[i] + 
    beta[21]*POSE2[i]*coated2[i] + beta[22]*POFE2[i]*coated2[i] + beta[23]*VUMI2[i]*coated2[i] + beta[24]*ELEL2[i]*coated2[i] + 
    beta[25]*high2[i]*fall2[i] + beta[26]*high2[i]*spring2[i] + beta[27]*high2[i]*coated2[i] + 
    beta[28]*fall2[i]*coated2[i] + beta[29]*spring2[i]*coated2[i] +
    eps[block.c[i]]
  } 
    
  # Identifiable intercept, post sweeping random effect means into intercept
  a.star <- a + mean(eps[])
  alpha.star <- alpha + mean(eps.c[])
  
  # Relatively non-informative priors
  
  # random effects of block
  for(b in 1:Nb){ # number of blocks
    eps[b] ~ dnorm(0, tau.eps)
    eps.c[b] ~ dnorm(0, tau.eps.c)
    
    # Identifiable random effects - post-sweeping of mean REs by block
    eps.star[b] <- eps[b] - mean(eps[])
    eps.star.c[b] <- eps.c[b] - mean(eps.c[])
  }
  
  
  # Block level precisions with folded T priors
  tau.eps ~ dt(0, 10, 2)T(0, )
  tau.eps.c ~ dt(0, 10, 2)T(0, )
  
  # Coefficient root notes
  a ~ dnorm(0, 0.0001)
  alpha ~ dnorm(0, 0.0001)
  
  for(l in 1:nL){ # Number of treatment offsets
    b[l] ~ dnorm(0, 0.0001)
    beta[l] ~ dnorm(0, 0.0001)
  }
  
  # General priors
  tau ~ dt(0, 10, 2)T(0, )
  
  # Convert tau to sig for monitoring
  sig <- pow(tau, -0.5)
  sig.eps <- pow(tau.eps, -0.5)
  sig.eps.c <- pow(tau.eps.c, -0.5)

  # Calculations to monitor, only two-way combinations
  # Unscaled differences relative to reference level
Diff_b[1] <- ilogit(a.star + b[1]) - ilogit(a.star) # POSE
  Diff_b[2] <- ilogit(a.star + b[2]) - ilogit(a.star) # POFE
  Diff_b[3] <- ilogit(a.star + b[3]) - ilogit(a.star) # VUMI
  Diff_b[4] <- ilogit(a.star + b[4]) - ilogit(a.star) # ELEL
  Diff_b[5] <- ilogit(a.star + b[5]) - ilogit(a.star) # high
  Diff_b[6] <- ilogit(a.star + b[6]) - ilogit(a.star) # fall
  Diff_b[7] <- ilogit(a.star + b[7]) - ilogit(a.star) # spring
  Diff_b[8] <- ilogit(a.star + b[8]) - ilogit(a.star) # coated

  diff_b[1] <- ilogit(a.star + b[1] + b[5] + b[9]) - ilogit(a.star) # POSE:high
  diff_b[2] <- ilogit(a.star + b[2] + b[5] + b[10]) - ilogit(a.star) # POFE:high
  diff_b[3] <- ilogit(a.star + b[3] + b[5] + b[11]) - ilogit(a.star) # VUMI:high
  diff_b[4] <- ilogit(a.star + b[4] + b[5] + b[12]) - ilogit(a.star) # ELEL:high
  diff_b[5] <- ilogit(a.star + b[1] + b[6] + b[13]) - ilogit(a.star) # POSE:fall
  diff_b[6] <- ilogit(a.star + b[2] + b[6] + b[14]) - ilogit(a.star) # POFE:fall
  diff_b[7] <- ilogit(a.star + b[3] + b[6] + b[15]) - ilogit(a.star) # VUMI:fall
  diff_b[8] <- ilogit(a.star + b[4] + b[6] + b[16]) - ilogit(a.star) # ELEL:fall
  diff_b[9] <- ilogit(a.star + b[1] + b[7] + b[17]) - ilogit(a.star) # POSE:spring
  diff_b[10] <- ilogit(a.star + b[2] + b[7] + b[18]) - ilogit(a.star) # POFE:spring
  diff_b[11] <- ilogit(a.star + b[3] + b[7] + b[19]) - ilogit(a.star) # VUMI:spring
  diff_b[12] <- ilogit(a.star + b[4] + b[7] + b[20]) - ilogit(a.star) # ELEL:spring
  diff_b[13] <- ilogit(a.star + b[1] + b[8] + b[21]) - ilogit(a.star) # POSE:coated
  diff_b[14] <- ilogit(a.star + b[2] + b[8] + b[22]) - ilogit(a.star) # POFE:coated
  diff_b[15] <- ilogit(a.star + b[3] + b[8] + b[23]) - ilogit(a.star) # VUMI:coated
  diff_b[16] <- ilogit(a.star + b[4] + b[8] + b[24]) - ilogit(a.star) # ELEL:coated
  diff_b[17] <- ilogit(a.star + b[5] + b[6] + b[25]) - ilogit(a.star) # high:fall
  diff_b[18] <- ilogit(a.star + b[5] + b[7] + b[26]) - ilogit(a.star) # high:spring
  diff_b[19] <- ilogit(a.star + b[5] + b[8] + b[27]) - ilogit(a.star) # high:coated
  diff_b[20] <- ilogit(a.star + b[6] + b[8] + b[28]) - ilogit(a.star) # fall:coated
  diff_b[21] <- ilogit(a.star + b[7] + b[8] + b[29]) - ilogit(a.star) # spring:coated
  
  
  Diff_Beta[1] <- ilogit(alpha.star + beta[1]) - ilogit(alpha.star) # POSE
  Diff_Beta[2] <- ilogit(alpha.star + beta[2]) - ilogit(alpha.star) # POFE
  Diff_Beta[3] <- ilogit(alpha.star + beta[3]) - ilogit(alpha.star) # VUMI
  Diff_Beta[4] <- ilogit(alpha.star + beta[4]) - ilogit(alpha.star) # ELEL
  Diff_Beta[5] <- ilogit(alpha.star + beta[5]) - ilogit(alpha.star) # high
  Diff_Beta[6] <- ilogit(alpha.star + beta[6]) - ilogit(alpha.star) # fall
  Diff_Beta[7] <- ilogit(alpha.star + beta[7]) - ilogit(alpha.star) # spring
  Diff_Beta[8] <- ilogit(alpha.star + beta[8]) - ilogit(alpha.star) # coated

  diff_Beta[1] <- ilogit(alpha.star + beta[1] + beta[5] + beta[9]) - ilogit(alpha.star) # POSE:high
  diff_Beta[2] <- ilogit(alpha.star + beta[2] + beta[5] + beta[10]) - ilogit(alpha.star) # POFE:high
  diff_Beta[3] <- ilogit(alpha.star + beta[3] + beta[5] + beta[11]) - ilogit(alpha.star) # VUMI:high
  diff_Beta[4] <- ilogit(alpha.star + beta[4] + beta[5] + beta[12]) - ilogit(alpha.star) # ELEL:high
  diff_Beta[5] <- ilogit(alpha.star + beta[1] + beta[6] + beta[13]) - ilogit(alpha.star) # POSE:fall
  diff_Beta[6] <- ilogit(alpha.star + beta[2] + beta[6] + beta[14]) - ilogit(alpha.star) # POFE:fall
  diff_Beta[7] <- ilogit(alpha.star + beta[3] + beta[6] + beta[15]) - ilogit(alpha.star) # VUMI:fall
  diff_Beta[8] <- ilogit(alpha.star + beta[4] + beta[6] + beta[16]) - ilogit(alpha.star) # ELEL:fall
  diff_Beta[9] <- ilogit(alpha.star + beta[1] + beta[7] + beta[17]) - ilogit(alpha.star) # POSE:spring
  diff_Beta[10] <- ilogit(alpha.star + beta[2] + beta[7] + beta[18]) - ilogit(alpha.star) # POFE:spring
  diff_Beta[11] <- ilogit(alpha.star + beta[3] + beta[7] + beta[19]) - ilogit(alpha.star) # VUMI:spring
  diff_Beta[12] <- ilogit(alpha.star + beta[4] + beta[7] + beta[20]) - ilogit(alpha.star) # ELEL:spring
  diff_Beta[13] <- ilogit(alpha.star + beta[1] + beta[8] + beta[21]) - ilogit(alpha.star) # POSE:coated
  diff_Beta[14] <- ilogit(alpha.star + beta[2] + beta[8] + beta[22]) - ilogit(alpha.star) # POFE:coated
  diff_Beta[15] <- ilogit(alpha.star + beta[3] + beta[8] + beta[23]) - ilogit(alpha.star) # VUMI:coated
  diff_Beta[16] <- ilogit(alpha.star + beta[4] + beta[8] + beta[24]) - ilogit(alpha.star) # ELEL:coated
  diff_Beta[17] <- ilogit(alpha.star + beta[5] + beta[6] + beta[25]) - ilogit(alpha.star) # high:fall
  diff_Beta[18] <- ilogit(alpha.star + beta[5] + beta[7] + beta[26]) - ilogit(alpha.star) # high:spring
  diff_Beta[19] <- ilogit(alpha.star + beta[5] + beta[8] + beta[27]) - ilogit(alpha.star) # high:coated
  diff_Beta[20] <- ilogit(alpha.star + beta[6] + beta[8] + beta[28]) - ilogit(alpha.star) # fall:coated
  diff_Beta[21] <- ilogit(alpha.star + beta[7] + beta[8] + beta[29]) - ilogit(alpha.star) # spring:coated
  
  
  # Monitor the mean of probability of absence
rho.ELEL.low.ungrazed.uncoated <- ilogit(a.star + b[4])
rho.ELEL.low.ungrazed.coated <- ilogit(a.star + b[8] + b[4] + b[24])
rho.ELEL.low.fall.uncoated <- ilogit(a.star + b[6] + b[4] + b[16])
rho.ELEL.low.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[4] + b[24] + b[16])
rho.ELEL.low.spring.uncoated <- ilogit(a.star + b[7] + b[4] + b[20])
rho.ELEL.low.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[4] + b[24] + b[20])

rho.ELEL.high.ungrazed.uncoated <- ilogit(a.star + b[5]+ b[4] + b[12])
rho.ELEL.high.ungrazed.coated <- ilogit(a.star + b[8] + b[5] + b[27]+ b[4] + b[24] + b[12])
rho.ELEL.high.fall.uncoated <- ilogit(a.star + b[6] + b[5] + b[25]+ b[4] + b[16] + b[12])
rho.ELEL.high.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[5] + b[27] + b[25] + b[4] + b[24] + b[16] + b[12])
rho.ELEL.high.spring.uncoated <- ilogit(a.star + b[7] + b[5] + b[26]+ b[4] + b[20] + b[12])
rho.ELEL.high.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[5] + b[27] + b[26] + b[4] + b[24] + b[20] + b[12])

rho.VUMI.low.ungrazed.uncoated <- ilogit(a.star + b[3])
rho.VUMI.low.ungrazed.coated <- ilogit(a.star + b[8] + b[3] + b[23])
rho.VUMI.low.fall.uncoated <- ilogit(a.star + b[6] + b[3] + b[15])
rho.VUMI.low.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[3] + b[23] + b[15])
rho.VUMI.low.spring.uncoated <- ilogit(a.star + b[7] + b[3] + b[19])
rho.VUMI.low.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[3] + b[23] + b[19])

rho.VUMI.high.ungrazed.uncoated <- ilogit(a.star + b[5]+ b[3] + b[11])
rho.VUMI.high.ungrazed.coated <- ilogit(a.star + b[8] + b[5] + b[27]+ b[3] + b[23] + b[11])
rho.VUMI.high.fall.uncoated <- ilogit(a.star + b[6] + b[5] + b[25]+ b[3] + b[15] + b[11])
rho.VUMI.high.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[5] + b[27] + b[25] + b[3] + b[23] + b[15] + b[11])
rho.VUMI.high.spring.uncoated <- ilogit(a.star + b[7] + b[5] + b[26]+ b[3] + b[19] + b[11])
rho.VUMI.high.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[5] + b[27] + b[26] + b[3] + b[23] + b[19] + b[11])

rho.POFE.low.ungrazed.uncoated <- ilogit(a.star + b[2])
rho.POFE.low.ungrazed.coated <- ilogit(a.star + b[8] + b[2] + b[22])
rho.POFE.low.fall.uncoated <- ilogit(a.star + b[6] + b[2] + b[14])
rho.POFE.low.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[2] + b[22] + b[14])
rho.POFE.low.spring.uncoated <- ilogit(a.star + b[7] + b[2] + b[18])
rho.POFE.low.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[2] + b[22] + b[18])

rho.POFE.high.ungrazed.uncoated <- ilogit(a.star + b[5] + b[2] + b[10])
rho.POFE.high.ungrazed.coated <- ilogit(a.star + b[8] + b[5] + b[27]+ b[2] + b[22] + b[10])
rho.POFE.high.fall.uncoated <- ilogit(a.star + b[6] + b[5] + b[25]+ b[2] + b[14] + b[10])
rho.POFE.high.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[5] + b[27] + b[25] + b[2] + b[22] + b[14] + b[10])
rho.POFE.high.spring.uncoated <- ilogit(a.star + b[7] + b[5] + b[26] + b[2] + b[18] + b[10])
rho.POFE.high.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[5] + b[27] + b[26] + b[2] + b[22] + b[18] + b[10])

rho.POSE.low.ungrazed.uncoated <- ilogit(a.star + b[1])
rho.POSE.low.ungrazed.coated <- ilogit(a.star + b[8] + b[1] + b[21])
rho.POSE.low.fall.uncoated <- ilogit(a.star + b[6] + b[1] + b[13])
rho.POSE.low.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[1] + b[21] + b[13])
rho.POSE.low.spring.uncoated <- ilogit(a.star + b[7] + b[1] + b[17])
rho.POSE.low.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[1] + b[21] + b[17])

rho.POSE.high.ungrazed.uncoated <- ilogit(a.star + b[5] + b[1] + b[9])
rho.POSE.high.ungrazed.coated <- ilogit(a.star + b[8] + b[5] + b[27] + b[1] + b[21] + b[9])
rho.POSE.high.fall.uncoated <- ilogit(a.star + b[6] + b[5] + b[25] + b[1] + b[13] + b[9])
rho.POSE.high.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[5] + b[27] + b[25]+ b[1] + b[21] + b[13] + b[9])
rho.POSE.high.spring.uncoated <- ilogit(a.star + b[7] + b[5] + b[26]+ b[1] + b[17] + b[9])
rho.POSE.high.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[5] + b[27] + b[26] + b[1] + b[21] + b[17] + b[9])

rho.ELTR.low.ungrazed.uncoated <- ilogit(a.star)
rho.ELTR.low.ungrazed.coated <- ilogit(a.star + b[8])
rho.ELTR.low.fall.uncoated <- ilogit(a.star + b[6])
rho.ELTR.low.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28])
rho.ELTR.low.spring.uncoated <- ilogit(a.star + b[7])
rho.ELTR.low.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29])

rho.ELTR.high.ungrazed.uncoated <- ilogit(a.star + b[5])
rho.ELTR.high.ungrazed.coated <- ilogit(a.star + b[8] + b[5] + b[27])
rho.ELTR.high.fall.uncoated <- ilogit(a.star + b[6] + b[5] + b[25])
rho.ELTR.high.fall.coated <- ilogit(a.star + b[8] + b[6] + b[28] + b[5] + b[27] + b[25])
rho.ELTR.high.spring.uncoated <- ilogit(a.star + b[7] + b[5] + b[26])
rho.ELTR.high.spring.coated <- ilogit(a.star + b[8] + b[7] + b[29] + b[5] + b[27] + b[26])
  
  
  # Monitor the mean of cover if present
m.ELEL.low.ungrazed.uncoated <- ilogit(alpha.star + beta[4])*(1-rho.ELEL.low.ungrazed.uncoated)
m.ELEL.low.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[4] + beta[24])*(1-rho.ELEL.low.ungrazed.coated)
m.ELEL.low.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[4] + beta[16])*(1-rho.ELEL.low.fall.uncoated)
m.ELEL.low.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[4] + beta[24] + beta[16])*(1-rho.ELEL.low.fall.coated)
m.ELEL.low.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[4] + beta[20])*(1-rho.ELEL.low.spring.uncoated)
m.ELEL.low.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[4] + beta[24] + beta[20])*(1-rho.ELEL.low.spring.coated)

m.ELEL.high.ungrazed.uncoated <- ilogit(alpha.star + beta[5]+ beta[4] + beta[12])*(1-rho.ELEL.high.ungrazed.uncoated)
m.ELEL.high.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[5] + beta[27]+ beta[4] + beta[24] + beta[12])*(1-rho.ELEL.high.ungrazed.coated)
m.ELEL.high.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[5] + beta[25]+ beta[4] + beta[16] + beta[12])*(1-rho.ELEL.high.fall.uncoated)
m.ELEL.high.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[5] + beta[27] + beta[25] + beta[4] + beta[24] + beta[16] + beta[12])*(1-rho.ELEL.high.fall.coated)
m.ELEL.high.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[5] + beta[26]+ beta[4] + beta[20] + beta[12])*(1-rho.ELEL.high.spring.uncoated)
m.ELEL.high.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[5] + beta[27] + beta[26] + beta[4] + beta[24] + beta[20] + beta[12])*(1-rho.ELEL.high.spring.coated)

m.VUMI.low.ungrazed.uncoated <- ilogit(alpha.star + beta[3])*(1-rho.VUMI.low.ungrazed.uncoated)
m.VUMI.low.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[3] + beta[23])*(1-rho.VUMI.low.ungrazed.coated)
m.VUMI.low.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[3] + beta[15])*(1-rho.VUMI.low.fall.uncoated)
m.VUMI.low.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[3] + beta[23] + beta[15])*(1-rho.VUMI.low.fall.coated)
m.VUMI.low.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[3] + beta[19])*(1-rho.VUMI.low.spring.uncoated)
m.VUMI.low.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[3] + beta[23] + beta[19])*(1-rho.VUMI.low.spring.coated)

m.VUMI.high.ungrazed.uncoated <- ilogit(alpha.star + beta[5]+ beta[3] + beta[11])*(1-rho.VUMI.high.ungrazed.uncoated)
m.VUMI.high.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[5] + beta[27]+ beta[3] + beta[23] + beta[11])*(1-rho.VUMI.high.ungrazed.coated)
m.VUMI.high.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[5] + beta[25]+ beta[3] + beta[15] + beta[11])*(1-rho.VUMI.high.fall.uncoated)
m.VUMI.high.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[5] + beta[27] + beta[25] + beta[3] + beta[23] + beta[15] + beta[11])*(1-rho.VUMI.high.fall.coated)
m.VUMI.high.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[5] + beta[26]+ beta[3] + beta[19] + beta[11])*(1-rho.VUMI.high.spring.uncoated)
m.VUMI.high.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[5] + beta[27] + beta[26] + beta[3] + beta[23] + beta[19] + beta[11])*(1-rho.VUMI.high.spring.coated)

m.POFE.low.ungrazed.uncoated <- ilogit(alpha.star + beta[2])*(1-rho.POFE.low.ungrazed.uncoated)
m.POFE.low.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[2] + beta[22])*(1-rho.POFE.low.ungrazed.coated)
m.POFE.low.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[2] + beta[14])*(1-rho.POFE.low.fall.uncoated)
m.POFE.low.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[2] + beta[22] + beta[14])*(1-rho.POFE.low.fall.coated)
m.POFE.low.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[2] + beta[18])*(1-rho.POFE.low.spring.uncoated)
m.POFE.low.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[2] + beta[22] + beta[18])*(1-rho.POFE.low.spring.coated)

m.POFE.high.ungrazed.uncoated <- ilogit(alpha.star + beta[5] + beta[2] + beta[10])*(1-rho.POFE.high.ungrazed.uncoated)
m.POFE.high.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[5] + beta[27]+ beta[2] + beta[22] + beta[10])*(1-rho.POFE.high.ungrazed.coated)
m.POFE.high.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[5] + beta[25]+ beta[2] + beta[14] + beta[10])*(1-rho.POFE.high.fall.uncoated)
m.POFE.high.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[5] + beta[27] + beta[25] + beta[2] + beta[22] + beta[14] + beta[10])*(1-rho.POFE.high.fall.coated)
m.POFE.high.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[5] + beta[26] + beta[2] + beta[18] + beta[10])*(1-rho.POFE.high.spring.uncoated)
m.POFE.high.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[5] + beta[27] + beta[26] + beta[2] + beta[22] + beta[18] + beta[10])*(1-rho.POFE.high.spring.coated)

m.POSE.low.ungrazed.uncoated <- ilogit(alpha.star + beta[1])*(1-rho.POSE.low.ungrazed.uncoated)
m.POSE.low.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[1] + beta[21])*(1-rho.POSE.low.ungrazed.coated)
m.POSE.low.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[1] + beta[13])*(1-rho.POSE.low.fall.uncoated)
m.POSE.low.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[1] + beta[21] + beta[13])*(1-rho.POSE.low.fall.coated)
m.POSE.low.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[1] + beta[17])*(1-rho.POSE.low.spring.uncoated)
m.POSE.low.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[1] + beta[21] + beta[17])*(1-rho.POSE.low.spring.coated)

m.POSE.high.ungrazed.uncoated <- ilogit(alpha.star + beta[5] + beta[1] + beta[9])*(1-rho.POSE.high.ungrazed.uncoated)
m.POSE.high.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[5] + beta[27] + beta[1] + beta[21] + beta[9])*(1-rho.POSE.high.ungrazed.coated)
m.POSE.high.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[5] + beta[25] + beta[1] + beta[13] + beta[9])*(1-rho.POSE.high.fall.uncoated)
m.POSE.high.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[5] + beta[27] + beta[25]+ beta[1] + beta[21] + beta[13] + beta[9])*(1-rho.POSE.high.fall.coated)
m.POSE.high.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[5] + beta[26]+ beta[1] + beta[17] + beta[9])*(1-rho.POSE.high.spring.uncoated)
m.POSE.high.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[5] + beta[27] + beta[26] + beta[1] + beta[21] + beta[17] + beta[9])*(1-rho.POSE.high.spring.coated)

m.ELTR.low.ungrazed.uncoated <- ilogit(alpha.star)*(1-rho.ELTR.low.ungrazed.uncoated)
m.ELTR.low.ungrazed.coated <- ilogit(alpha.star + beta[8])*(1-rho.ELTR.low.ungrazed.coated)
m.ELTR.low.fall.uncoated <- ilogit(alpha.star + beta[6])*(1-rho.ELTR.low.fall.uncoated)
m.ELTR.low.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28])*(1-rho.ELTR.low.fall.coated)
m.ELTR.low.spring.uncoated <- ilogit(alpha.star + beta[7])*(1-rho.ELTR.low.spring.uncoated)
m.ELTR.low.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29])*(1-rho.ELTR.low.spring.coated)

m.ELTR.high.ungrazed.uncoated <- ilogit(alpha.star + beta[5])*(1-rho.ELTR.high.ungrazed.uncoated)
m.ELTR.high.ungrazed.coated <- ilogit(alpha.star + beta[8] + beta[5] + beta[27])*(1-rho.ELTR.high.ungrazed.coated)
m.ELTR.high.fall.uncoated <- ilogit(alpha.star + beta[6] + beta[5] + beta[25])*(1-rho.ELTR.high.fall.uncoated)
m.ELTR.high.fall.coated <- ilogit(alpha.star + beta[8] + beta[6] + beta[28] + beta[5] + beta[27] + beta[25])*(1-rho.ELTR.high.fall.coated)
m.ELTR.high.spring.uncoated <- ilogit(alpha.star + beta[7] + beta[5] + beta[26])*(1-rho.ELTR.high.spring.uncoated)
m.ELTR.high.spring.coated <- ilogit(alpha.star + beta[8] + beta[7] + beta[29] + beta[5] + beta[27] + beta[26])*(1-rho.ELTR.high.spring.coated)
}