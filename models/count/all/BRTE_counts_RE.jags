# ANOVA of both theta and psi
# theta has nested random effects

model{
  for(i in 1:N){
    # Likelihood
    counts[i] ~ dpois(mu[i])
    p[i] ~ dbern(psi)
    
    # replicated data
    counts.rep[i] ~ dpois(mu[i])
    
    # Mean model of zero-inflated Poisson
    mu[i] <- theta[i]*area[i]*p[i] + 0.00001 
    
    # Regression model for theta (proportion) with random effects
    theta[i] <- exp(alpha + beta[1]*fall[i] + beta[2]*spring[i] + beta[3]*herbicide[i] + beta[4]*greenstrip[i]) + eps[pad[i]] + gam[block[pad[i]]])
    
    # Regression model for psi (arrival percentage)
    # psi[i] <- ilogit(Alpha + Beta[1]*fall[i] + Beta[2]*spring[i] + Beta[3]*herbicide[i] + Beta[4]*greenstrip[i])
    
    # Part of Dsum calculation
    Sqdiff[i] <- pow(counts.rep[i] - counts[i], 2)
  }
  
  # Identifiable intercept, post sweeping random effect means into intercept
  alpha.star <- alpha + mean(gam[]) + mean(eps.avg[])
  
  # Relatively non-informative priors
    
  # random effects of paddock nested within block
  for(b in 1:Nb){ # number of blocks
    gam[b] ~ dnorm(0, tau.gam)
        
    # Identifiable random effects
    gam.star[b] <- gam[b] + eps.avg[b] - gam.avg - mean.eps.avg
    
    # Compute average non-identifiable paddock random effect within each block
    eps.avg[b] <- mean(eps[(3*(b-1)+1):(3*b)])
  }
  
  # Compute average block random effect and mean of mean paddock random effects
  gam.avg <- mean(gam[])
  mean.eps.avg <- mean(eps.avg[])
  
  # Random effects of paddocks within block
  for(p in 1:Np){ # number of paddocks
    eps[p] ~ dnorm(0, tau.eps)
    
    # Identifiable random effects - post-sweeping of mean REs by block
    eps.star[p] <- eps[p] - eps.avg[block[p]] 
  }

  # Paddock and block level precisions with folded T priors
  tau.Eps ~ dt(0, Bb, 2)
  sig.eps <- abs(tau.Eps)
  tau.eps <- pow(sig.eps, -2)
  
  
  tau.Gam ~ dt(0, Bb, 2)
  sig.gam <- abs(tau.Gam)
  tau.gam <- pow(sig.gam, -2)
  
  # dt parameters (set as data)
  Bb <- 1/(Ab*Ab)
  
  # Intercept
  alpha ~ dnorm(0, 0.0001)
  #Alpha ~ dnorm(0, 0.0001)
  
  # Coefficients
  for(l in 1:nL){ # Number of treatment offsets
    beta[l] ~ dnorm(0, 0.0001)
    #Beta[l] ~ dnorm(0, 0.0001)
  }
  
  # Probability of BRTE presence
  psi ~ dbeta(2, 2) # Proportion of non-zero values
  
  
  # Derived quantities
  # Probability of BRTE frequency if present
  prob[1] <- exp(alpha) # ungrazed, control
  prob[2] <- exp(alpha + beta[1]) # fall grazing, control
  prob[3] <- exp(alpha + beta[2]) # spring grazing, control
  prob[4] <- exp(alpha + beta[3]) # ungrazed, herbicide
  prob[5] <- exp(alpha + beta[4]) # ungrazed, greenstrip
  prob[6] <- exp(alpha + beta[1] + beta[3]) # fall grazing, herbicide
  prob[7] <- exp(alpha + beta[1] + beta[4]) # fall grazing, greenstrip
  prob[8] <- exp(alpha + beta[2] + beta[3]) # spring grazing, herbicide
  prob[9] <- exp(alpha + beta[2] + beta[4]) # spring grazing, greenstrip
  
  # Differences in BRTE frequency if present
  diff[1] <- exp(alpha + beta[1]) - exp(alpha) # effect of fall grazing
  diff[2] <- exp(alpha + beta[2]) - exp(alpha) # effect of spring grazing
  diff[3] <- exp(alpha + beta[3]) - exp(alpha) # effect of herbicide
  diff[4] <- exp(alpha + beta[4]) - exp(alpha) # effect of greenstrip
  
  # Probability of BRTE frequency if present
  #Prob[1] <- ilogit(Alpha) # ungrazed, control
  #Prob[2] <- ilogit(Alpha + Beta[1]) # fall grazing, control
  #Prob[3] <- ilogit(Alpha + Beta[2]) # spring grazing, control
  #Prob[4] <- ilogit(Alpha + Beta[3]) # ungrazed, herbicide
  #Prob[5] <- ilogit(Alpha + Beta[4]) # ungrazed, greenstrip
  #Prob[6] <- ilogit(Alpha + Beta[1] + Beta[3]) # fall grazing, herbicide
  #Prob[7] <- ilogit(Alpha + Beta[1] + Beta[4]) # fall grazing, greenstrip
  #Prob[8] <- ilogit(Alpha + Beta[2] + Beta[3]) # spring grazing, herbicide
  #Prob[9] <- ilogit(Alpha + Beta[2] + Beta[4]) # spring grazing, greenstrip
  
  # Differences in BRTE presence
  #Diff[1] <- ilogit(Alpha + Beta[1]) - ilogit(Alpha) # effect of fall grazing
  #Diff[2] <- ilogit(Alpha + Beta[2]) - ilogit(Alpha) # effect of spring grazing
  #Diff[3] <- ilogit(Alpha + Beta[3]) - ilogit(Alpha) # effect of herbicide
  #Diff[4] <- ilogit(Alpha + Beta[4]) - ilogit(Alpha) # effect of greenstrip


  # Dsum: posterior predictive loss
  Dsum <- sum(Sqdiff)
}